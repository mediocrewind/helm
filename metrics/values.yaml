# ---------------------------------------------------------------------------------------------------------
# base configuration
nameOverride: "mediocre-system-metrics"
fullnameOverride: "mediocre-system-metrics"
role: "application"
namespace: kube-system

# ---------------------------------------------------------------------------------------------------------
# serviceaccount
serviceAccount:
  name: ""
  create: true
  automount: true

# ---------------------------------------------------------------------------------------------------------
# clusterrole
ClusterRole:
  aggregatedMetricsReader:
    rules:
      - apiGroups: ["metrics.k8s.io"]   
        resources: ["pods","nodes"]
        verbs: ["get","list","watch"]
  metricsServer:
    rules:
      - apiGroups: [""]
        resources: ["nodes/metrics"]
        verbs: ["get"]
      - apiGroups: [""]
        resources: ["pods","nodes"]
        verbs: ["get","list","watch"]

# ---------------------------------------------------------------------------------------------------------
# deployment
Deployment:
  spec:
    strategy:
      rollingUpdate:
        maxUnavailable: 0
    template:
      spec:
        priorityClassName: system-cluster-critical
        containers:
          name: metrics-server
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "100M"
              cpu: 0.2
            limits:
              memory: "1G"
              cpu: 1.0
          ports:
            - name: https
              containerPort: 10250
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
        volumes:
          - name: tmp-dir
            emptyDir: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readonlyRootFilesystem: true
        tolerations:
          - key: "platform/role"
            operator: "Equal"
            value: "application"
            effect: "NoExecute"
    replicas: 2
    selector:
      matchLabels:
        platform/role: application

# ---------------------------------------------------------------------------------------------------------
# service
Service:
  spec:
    ports:
      - name: https
        port: 443
        protocol: TCP
        targetPort: https
    selector:
      app.kubernetes.io/name: mediocre-system-metrics

# ---------------------------------------------------------------------------------------------------------
# apiservice
APIService:
  spec:
    group: metrics.k8s.io
    groupPriorityMinimum: 100
    insecureSkipTLSVerify: true
    version: v1beta1
    versionPriority: 100